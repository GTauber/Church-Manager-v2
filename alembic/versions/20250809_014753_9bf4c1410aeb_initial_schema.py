"""initial_schema

Revision ID: 9bf4c1410aeb
Revises: 
Create Date: 2025-08-09 01:47:53.028948

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '9bf4c1410aeb'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('username', sa.String(length=50), nullable=False, comment='Unique username for login'),
    sa.Column('email', sa.String(length=255), nullable=False, comment='Contact email address'),
    sa.Column('phone_number', sa.String(length=20), nullable=False, comment='WhatsApp phone number (primary identifier)'),
    sa.Column('first_name', sa.String(length=100), nullable=False, comment="User's first name"),
    sa.Column('last_name', sa.String(length=100), nullable=False, comment="User's last name"),
    sa.Column('is_active', sa.Boolean(), nullable=False, comment='Whether the user account is active'),
    sa.Column('is_available', sa.Boolean(), nullable=False, comment='General availability for scheduling'),
    sa.Column('date_joined', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='When the user registered'),
    sa.Column('id', sa.UUID(), nullable=False, comment='Unique identifier for the record'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Timestamp when the record was created'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Timestamp when the record was last updated'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_index(op.f('ix_user_is_active'), 'user', ['is_active'], unique=False)
    op.create_index(op.f('ix_user_phone_number'), 'user', ['phone_number'], unique=True)
    op.create_index(op.f('ix_user_username'), 'user', ['username'], unique=True)
    op.create_table('ministry',
    sa.Column('name', sa.String(length=100), nullable=False, comment='Unique name of the ministry'),
    sa.Column('leader_id', sa.UUID(), nullable=True, comment='User who leads this ministry (can be null initially)'),
    sa.Column('is_active', sa.Boolean(), nullable=False, comment='Whether the ministry is currently active'),
    sa.Column('id', sa.UUID(), nullable=False, comment='Unique identifier for the record'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Timestamp when the record was created'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Timestamp when the record was last updated'),
    sa.ForeignKeyConstraint(['leader_id'], ['user.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ministry_is_active'), 'ministry', ['is_active'], unique=False)
    op.create_index(op.f('ix_ministry_leader_id'), 'ministry', ['leader_id'], unique=False)
    op.create_index(op.f('ix_ministry_name'), 'ministry', ['name'], unique=True)
    op.create_table('schedule',
    sa.Column('ministry_id', sa.UUID(), nullable=False, comment='Ministry this schedule belongs to'),
    sa.Column('title', sa.String(length=200), nullable=False, comment='Name of the schedule'),
    sa.Column('notes', sa.Text(), nullable=True, comment='Additional information about the schedule'),
    sa.Column('start_date', sa.Date(), nullable=False, comment='Start date of the schedule period'),
    sa.Column('end_date', sa.Date(), nullable=False, comment='End date of the schedule period'),
    sa.Column('id', sa.UUID(), nullable=False, comment='Unique identifier for the record'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Timestamp when the record was created'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Timestamp when the record was last updated'),
    sa.CheckConstraint('end_date >= start_date', name='check_schedule_dates'),
    sa.ForeignKeyConstraint(['ministry_id'], ['ministry.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_schedule_end_date'), 'schedule', ['end_date'], unique=False)
    op.create_index(op.f('ix_schedule_ministry_id'), 'schedule', ['ministry_id'], unique=False)
    op.create_index(op.f('ix_schedule_start_date'), 'schedule', ['start_date'], unique=False)
    op.create_table('user_ministry',
    sa.Column('user_id', sa.UUID(), nullable=False, comment='User in this membership'),
    sa.Column('ministry_id', sa.UUID(), nullable=False, comment='Ministry in this membership'),
    sa.Column('joined_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='When the user joined this ministry'),
    sa.Column('id', sa.UUID(), nullable=False, comment='Unique identifier for the record'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Timestamp when the record was created'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Timestamp when the record was last updated'),
    sa.ForeignKeyConstraint(['ministry_id'], ['ministry.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'ministry_id', name='unique_user_ministry_membership')
    )
    op.create_index(op.f('ix_user_ministry_ministry_id'), 'user_ministry', ['ministry_id'], unique=False)
    op.create_index(op.f('ix_user_ministry_user_id'), 'user_ministry', ['user_id'], unique=False)
    op.create_table('schedule_occurrence',
    sa.Column('schedule_id', sa.UUID(), nullable=False, comment='Schedule this occurrence belongs to'),
    sa.Column('occurrence_date', sa.Date(), nullable=False, comment='Specific date of this occurrence'),
    sa.Column('day_of_week', sa.String(length=10), nullable=False, comment="Day name (e.g., 'Sunday')"),
    sa.Column('notes', sa.Text(), nullable=True, comment='Occurrence-specific notes'),
    sa.Column('id', sa.UUID(), nullable=False, comment='Unique identifier for the record'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Timestamp when the record was created'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Timestamp when the record was last updated'),
    sa.ForeignKeyConstraint(['schedule_id'], ['schedule.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_schedule_occurrence_occurrence_date'), 'schedule_occurrence', ['occurrence_date'], unique=False)
    op.create_index(op.f('ix_schedule_occurrence_schedule_id'), 'schedule_occurrence', ['schedule_id'], unique=False)
    op.create_table('schedule_assignment',
    sa.Column('occurrence_id', sa.UUID(), nullable=False, comment='Schedule occurrence this assignment is for'),
    sa.Column('user_id', sa.UUID(), nullable=False, comment='User assigned to this role'),
    sa.Column('role_code', sa.String(length=50), nullable=False, comment='Role identifier (e.g., WORSHIP_LEAD)'),
    sa.Column('status_code', sa.String(length=20), nullable=False, comment='Assignment status (e.g., ASSIGNED, CONFIRMED)'),
    sa.Column('notes', sa.Text(), nullable=True, comment='Assignment-specific notes'),
    sa.Column('id', sa.UUID(), nullable=False, comment='Unique identifier for the record'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Timestamp when the record was created'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Timestamp when the record was last updated'),
    sa.ForeignKeyConstraint(['occurrence_id'], ['schedule_occurrence.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('occurrence_id', 'user_id', 'role_code', name='unique_user_role_per_occurrence')
    )
    op.create_index(op.f('ix_schedule_assignment_occurrence_id'), 'schedule_assignment', ['occurrence_id'], unique=False)
    op.create_index(op.f('ix_schedule_assignment_status_code'), 'schedule_assignment', ['status_code'], unique=False)
    op.create_index(op.f('ix_schedule_assignment_user_id'), 'schedule_assignment', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_schedule_assignment_user_id'), table_name='schedule_assignment')
    op.drop_index(op.f('ix_schedule_assignment_status_code'), table_name='schedule_assignment')
    op.drop_index(op.f('ix_schedule_assignment_occurrence_id'), table_name='schedule_assignment')
    op.drop_table('schedule_assignment')
    op.drop_index(op.f('ix_schedule_occurrence_schedule_id'), table_name='schedule_occurrence')
    op.drop_index(op.f('ix_schedule_occurrence_occurrence_date'), table_name='schedule_occurrence')
    op.drop_table('schedule_occurrence')
    op.drop_index(op.f('ix_user_ministry_user_id'), table_name='user_ministry')
    op.drop_index(op.f('ix_user_ministry_ministry_id'), table_name='user_ministry')
    op.drop_table('user_ministry')
    op.drop_index(op.f('ix_schedule_start_date'), table_name='schedule')
    op.drop_index(op.f('ix_schedule_ministry_id'), table_name='schedule')
    op.drop_index(op.f('ix_schedule_end_date'), table_name='schedule')
    op.drop_table('schedule')
    op.drop_index(op.f('ix_ministry_name'), table_name='ministry')
    op.drop_index(op.f('ix_ministry_leader_id'), table_name='ministry')
    op.drop_index(op.f('ix_ministry_is_active'), table_name='ministry')
    op.drop_table('ministry')
    op.drop_index(op.f('ix_user_username'), table_name='user')
    op.drop_index(op.f('ix_user_phone_number'), table_name='user')
    op.drop_index(op.f('ix_user_is_active'), table_name='user')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    # ### end Alembic commands ###
